# mysql.py

# 데이터베이스라고 하는 것은 파일을 실시간으로 조회하고
# 수정하고 삭제하고 관리하는 시스템을 DBMS
# 대용량의 데이터를 쉽고 빠르게 처리하기 위해서 배운다.

from sqlite3 import *

# 데이터베이스
# mysql --> 중소기업, 쇼핑몰(작은 곳에서 데이터를 관리) -- 무료!

# 오라클 --> 대기업에서 데이터관리함 -- 유료!
# 어떤 데이터베이스든 데이터베이스를 관리하는 서버랑
# 내가 사용하는 파이썬 연결(연동)

# connect(데이터베이스명.db)
# open() 과 성격 똑같다
# 데이터베이스가 있으면 파일의 객체를 생성해서 con에 저장
#                없으면 파일의 객체를 생성하기 전에 데이터베이스를
#                먼저 생성하고 객체를 생성한다.

# 파일명만 쓰면 기본폴더에 생성
con = connect('test.db')

# 실제 데이터를 저장하는 표를 만든다. (테이블)
# 데이터베이스에 쿼리(질의(질문,지시))를 다루는 언어를 sql언어라고함.
# create : 생성을 의미함.
# create table 테이블명(실제 저장하는 변수들 선언)

# 파이썬에서 사용하는 데이터 타입하고 
# sqllite3 sql문에서 쓰는 타입이 약간 다르다.
# 정수 integer
# 문자 text
# 실수 real

# 데이터베이스한테 질문할 명령문(sql문)
# 테이블은 한 번 만들고 데이터베이스 안에 생성되면
# 다시 코드를 실행했을 때 에러가 난다.

# query = '''create table TestData(
# number integer,
# name text)'''

# 데이터베이스를 조작하는 커서! 먼저 필요하다
# 데이터베이스가 가지고 있다.
cur = con.cursor()

# 데이터베이스 추가(값들을 추가)
query = 'insert into TestData(number,name) values(1,"양선모")'

# 데이터베이스한테 전송
# insert into 테이블명(변수명,변수명,...) values(값1,값2,값3,..)
cur.execute(query)

# 데이터베이스는 대부분 데이터베이스에 적용을 해야된다.
# commit()을 해야된다.
con.commit()
con.close()

